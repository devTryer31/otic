<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vm="clr-namespace:Zipper.ViewModels"
                    xmlns:common="clr-namespace:Zipper.Common"
                    xmlns:c="clr-namespace:Zipper.Common.Converters">

    <DataTemplate DataType="{x:Type vm:CompresserViewModel}">
        <DockPanel>
            <StackPanel DockPanel.Dock="Bottom">
                <Button Content="Decode" Command="{Binding DecodeCommand}"
                            HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                <DockPanel>
                    <TextBlock DockPanel.Dock="Left" Text="Установлено: "/>
                    <TextBlock Text="{Binding FaacFileName}"
                                ToolTip="{Binding FaacFilePath}"/>
                </DockPanel>
            </StackPanel>
            <DockPanel>
                <DockPanel DockPanel.Dock="Bottom">
                    <TextBlock DockPanel.Dock="Left" Text="Утсановлено: "/>
                    <TextBlock Text="{Binding DefaultEncodedFolder}"
                            ToolTip="{Binding DefaultFilesFolderPath}"/>
                </DockPanel>

                <TextBlock Text="Drag and drop files/folders here"
                           VerticalAlignment="Stretch"
                           HorizontalAlignment="Stretch"
                           TextAlignment="Center"
                           AllowDrop="True"
                           common:DropBehavior.PreviewDropCommand="{Binding PreviewDropCommand}"     
                           />
            </DockPanel>
        </DockPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:SettingsViewModel}">
        <DataTemplate.Resources>
            <c:BoolToVisibilityConverter x:Key="BoolToVisibility"/>
        </DataTemplate.Resources>
        <GroupBox Header="Выбор алгоритмов">
            <StackPanel>
                <TextBlock Text="Сжатие без контекста"/>
                <DockPanel>
                    <ToggleButton   DockPanel.Dock="Right" Width="22"
                                    Background="White" BorderThickness="0" IsChecked="{Binding IsEditAlgoWitoutContext}">
                        <StaticResource ResourceKey="EditAlgorithmIcon"/>
                    </ToggleButton>
                    <ComboBox ItemsSource="{Binding EncodingTypes}"
                      SelectedItem="{Binding SelectedEncodingType}">
                    </ComboBox>
                </DockPanel>
                <ContentControl Content="{Binding AlgoWitoutContextViewModel, UpdateSourceTrigger=PropertyChanged}"
                                Visibility="{Binding IsEditAlgoWitoutContext, Converter={StaticResource ResourceKey=BoolToVisibility}}"/>

                <TextBlock Text="Сжатие с контектсом"/>
                <DockPanel>
                    <ToggleButton   DockPanel.Dock="Right" Width="22"
                                    Background="White" BorderThickness="0" IsChecked="{Binding IsEditAlgoContexted}">
                        <StaticResource ResourceKey="EditAlgorithmIcon"/>
                    </ToggleButton>
                    <ComboBox ItemsSource="{Binding EncodingTypesWithContext}"
                      SelectedItem="{Binding SelectedEncodingTypeWithContext}">
                    </ComboBox>
                </DockPanel>
                <ContentControl Content="{Binding AlgoContextedViewModel, UpdateSourceTrigger=PropertyChanged}"
                                Visibility="{Binding IsEditAlgoContexted, Converter={StaticResource ResourceKey=BoolToVisibility}}"/>

                <TextBlock Text="Зашита от помех"/>
                <DockPanel>
                    <ToggleButton   DockPanel.Dock="Right" Width="22"
                                    Background="White" BorderThickness="0" IsChecked="{Binding IsEditAlgoInterferenceProt}">
                        <StaticResource ResourceKey="EditAlgorithmIcon"/>
                    </ToggleButton>
                    <ComboBox ItemsSource="{Binding InterferenceProtectionTypres}"
                      SelectedItem="{Binding SelectedinterferenceProtection}">
                    </ComboBox>
                </DockPanel>
                <ContentControl Content="{Binding AlgoInterferenceProtViewModel , UpdateSourceTrigger=PropertyChanged}"
                                Visibility="{Binding IsEditAlgoInterferenceProt, Converter={StaticResource ResourceKey=BoolToVisibility}}"/>

            </StackPanel>
        </GroupBox>
    </DataTemplate>
</ResourceDictionary>